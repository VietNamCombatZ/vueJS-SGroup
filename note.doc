* 6-5


1/ 
- Trong src/ asset chứa các file ảnh, video, css(này có thể tách riêng ra 1 folder riêng)
- Các file trong views không phải view như trong MVVM mà mỗi view sẽ ứng với 1 API
- Router kiểm tra đường dẫn (tương tự controller trong MVC)
- stores sẽ lưu các thông tin, nó sẽ trả thông tin về cho view khi có thay đổi trong viewmodel
- 

2/ BTVN
a/6-5
- Viết file docker cho project cuối khoá BE
- Xem trước view syntax | layout | component

b/13-5
- Ráp vô login, register với BE trello và trả về access token
- Tại sao dùng password.value === '' thay vì !password.value


3. Extension
- tailwind css
- unocss
- px to rem
- vue ecosystem
- vue axios

4/ Kiến thức
- IIFE (Immediately Invoke function expression)
- trong script chú ý setup lang =ts
- dùng reactive() cho các kiểu dữ liệu tham chiếu như array, obj,... để cập nhật và thay đổi dữ liệu


* Cần thử cẩn thận:
- xoá hết nội dung component.json và src/assets/main.css. (xoá nội dung, không xoá file)
- npx shadcn-vue@latest init
- Nó sẽ khởi tạo 


*4-6
1/ trong dự án này, file main.ts sẽ là đầu ra của phần BE
* Cấu trúc thư mục
- assets: chứa liên quan .css, .svg
- components: chứa các phần tử gộp lại thành UI(ví dụ card, button, input,...)
- views: các trang hiển thị (thì App.vue là đầu ra tổng), 

*9-7
1/BTVN
- Tìm hiểu khác nhau 2 thẻ slot và router view trong src/layouts/default.vue
- Bổ sung xử lý cho refreshToken (trong apis/axios.client), có thể theo hướng lưu vô localStorage
- Sự khác biệt giữa attribute có/không có dấu ":"
- tìm hiểu pinia, computed, slot

2/ Pinia
- Trong VUE hay dùng Pinia để lưu trạng thái

3/ ref
- Giá trị trong ref() sẽ bị huỷ đi khi phần tử bị unmount, destroy(xoá khỏi DOM - chuyển trang,...)


* 23-7
1/ BTVN
- Tìm hiểu sử dụng thêm radio button, dropdown list,....
- Hoàn thiện đăng nhập, đăng ký, lưu token để sử dụng cho các phần authenticate, làm luôn reset password



2/ Dùng gì để validate
- Dùng yup, zod

















